{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///run/media/saad/Local%20Disk/impSTUFF/edai/src/lib/edgestore.ts"],"sourcesContent":["'use client';\n \nimport { type EdgeStoreRouter } from '../app/api/edgestore/[...edgestore]/route';\nimport { createEdgeStoreProvider } from '@edgestore/react';\n \nconst { EdgeStoreProvider, useEdgeStore } =\n  createEdgeStoreProvider<EdgeStoreRouter>();\n \nexport { EdgeStoreProvider, useEdgeStore };"],"names":[],"mappings":";;;;AAGA;AAHA;;AAKA,MAAM,EAAE,iBAAiB,EAAE,YAAY,EAAE,GACvC,CAAA,GAAA,yJAAA,CAAA,0BAAuB,AAAD","debugId":null}},
    {"offset": {"line": 25, "column": 0}, "map": {"version":3,"sources":["file:///run/media/saad/Local%20Disk/impSTUFF/edai/src/context/AuthContext.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { createContext, useContext, useState, useEffect } from 'react';\n\ninterface User {\n  id: string;\n  name: string;\n  email: string;\n  role: string;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  login: (userData: User) => void;\n  logout: () => void;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    // Check for user data in localStorage on initial load\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      setUser(JSON.parse(storedUser));\n    }\n  }, []);\n\n  const login = (userData: User) => {\n    setUser(userData);\n    localStorage.setItem('user', JSON.stringify(userData));\n  };\n\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('user');\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}; "],"names":[],"mappings":";;;;;AAEA;;;AAFA;;AAiBA,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAA+B;AAExD,MAAM,eAAwD,CAAC,EAAE,QAAQ,EAAE;;IAChF,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAe;IAE9C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR,sDAAsD;YACtD,MAAM,aAAa,aAAa,OAAO,CAAC;YACxC,IAAI,YAAY;gBACd,QAAQ,KAAK,KAAK,CAAC;YACrB;QACF;iCAAG,EAAE;IAEL,MAAM,QAAQ,CAAC;QACb,QAAQ;QACR,aAAa,OAAO,CAAC,QAAQ,KAAK,SAAS,CAAC;IAC9C;IAEA,MAAM,SAAS;QACb,QAAQ;QACR,aAAa,UAAU,CAAC;IAC1B;IAEA,qBACE,6LAAC,YAAY,QAAQ;QAAC,OAAO;YAAE;YAAM;YAAO;QAAO;kBAChD;;;;;;AAGP;GA1Ba;KAAA;AA4BN,MAAM,UAAU;;IACrB,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;IANa","debugId":null}}]
}