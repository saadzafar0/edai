{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///run/media/saad/Local%20Disk/impSTUFF/edai/src/app/api/signup/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\"\n\nexport async function POST(request: Request) {\n  try {\n    const body = await request.json()\n    const { email, password, role, name } = body\n\n    // Validate required fields\n    if (!email || !password || !role || !name) {\n      return NextResponse.json(\n        { message: 'All fields are required' },\n        { status: 400 }\n      )\n    }\n\n    // Validate role\n    if (!['student', 'tutor'].includes(role)) {\n      return NextResponse.json(\n        { message: 'Invalid role selected' },\n        { status: 400 }\n      )\n    }\n\n    // Call the backend API using fetch\n    const backendRes = await fetch(`${process.env.NEXT_PUBLIC_API_URL || 'http://localhost:3001'}/auth/signup`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ email, password, role, name }),\n    });\n\n    const responseData = await backendRes.json();\n\n    if (!backendRes.ok) {\n      return NextResponse.json(\n        { message: responseData.error || 'Failed to create account' },\n        { status: backendRes.status }\n      );\n    }\n\n    if (!responseData.token || !responseData.user) {\n      return NextResponse.json(\n        { message: 'Invalid response from server' },\n        { status: 500 }\n      );\n    }\n\n    // Set the auth cookie\n    const headers = new Headers()\n    headers.append(\"Set-Cookie\", `auth=${responseData.token}; Path=/; HttpOnly; SameSite=Strict`)\n\n    return NextResponse.json(\n      { user: responseData.user },\n      { status: 201, headers }\n    )\n  } catch (error: any) {\n    return NextResponse.json(\n      { message: 'Failed to create account' },\n      { status: 500 }\n    );\n  }\n} "],"names":[],"mappings":";;;AAAA;;AAEO,eAAe,KAAK,OAAgB;IACzC,IAAI;QACF,MAAM,OAAO,MAAM,QAAQ,IAAI;QAC/B,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG;QAExC,2BAA2B;QAC3B,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,QAAQ,CAAC,MAAM;YACzC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,SAAS;YAA0B,GACrC;gBAAE,QAAQ;YAAI;QAElB;QAEA,gBAAgB;QAChB,IAAI,CAAC;YAAC;YAAW;SAAQ,CAAC,QAAQ,CAAC,OAAO;YACxC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,SAAS;YAAwB,GACnC;gBAAE,QAAQ;YAAI;QAElB;QAEA,mCAAmC;QACnC,MAAM,aAAa,MAAM,MAAM,GAAG,6DAAmC,wBAAwB,YAAY,CAAC,EAAE;YAC1G,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;YACA,MAAM,KAAK,SAAS,CAAC;gBAAE;gBAAO;gBAAU;gBAAM;YAAK;QACrD;QAEA,MAAM,eAAe,MAAM,WAAW,IAAI;QAE1C,IAAI,CAAC,WAAW,EAAE,EAAE;YAClB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,SAAS,aAAa,KAAK,IAAI;YAA2B,GAC5D;gBAAE,QAAQ,WAAW,MAAM;YAAC;QAEhC;QAEA,IAAI,CAAC,aAAa,KAAK,IAAI,CAAC,aAAa,IAAI,EAAE;YAC7C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,SAAS;YAA+B,GAC1C;gBAAE,QAAQ;YAAI;QAElB;QAEA,sBAAsB;QACtB,MAAM,UAAU,IAAI;QACpB,QAAQ,MAAM,CAAC,cAAc,CAAC,KAAK,EAAE,aAAa,KAAK,CAAC,mCAAmC,CAAC;QAE5F,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,MAAM,aAAa,IAAI;QAAC,GAC1B;YAAE,QAAQ;YAAK;QAAQ;IAE3B,EAAE,OAAO,OAAY;QACnB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,SAAS;QAA2B,GACtC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}