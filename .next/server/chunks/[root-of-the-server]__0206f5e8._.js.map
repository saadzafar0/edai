{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 164, "column": 0}, "map": {"version":3,"sources":["file:///run/media/saad/Local%20Disk/impSTUFF/edai/src/lib/axios.ts"],"sourcesContent":["import axios from 'axios';\n\nconst axiosInstance = axios.create({\n  baseURL: process.env.NEXT_PUBLIC_API_URL || 'http://localhost:3001',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  withCredentials: true, // This is important for handling cookies\n});\n\n// Request interceptor\naxiosInstance.interceptors.request.use(\n  (config) => {\n    // Get auth token from cookie if it exists\n    const cookies = document.cookie.split(';');\n    const authCookie = cookies.find(cookie => cookie.trim().startsWith('auth='));\n    if (authCookie) {\n      const token = authCookie.split('=')[1];\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor\naxiosInstance.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    if (error.response?.status === 401) {\n      // Clear auth cookie\n      document.cookie = 'auth=; Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT;';\n      // Redirect to sign in\n      window.location.href = '/signin';\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport default axiosInstance; "],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,gBAAgB,uIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACjC,SAAS,6DAAmC;IAC5C,SAAS;QACP,gBAAgB;IAClB;IACA,iBAAiB;AACnB;AAEA,sBAAsB;AACtB,cAAc,YAAY,CAAC,OAAO,CAAC,GAAG,CACpC,CAAC;IACC,0CAA0C;IAC1C,MAAM,UAAU,SAAS,MAAM,CAAC,KAAK,CAAC;IACtC,MAAM,aAAa,QAAQ,IAAI,CAAC,CAAA,SAAU,OAAO,IAAI,GAAG,UAAU,CAAC;IACnE,IAAI,YAAY;QACd,MAAM,QAAQ,WAAW,KAAK,CAAC,IAAI,CAAC,EAAE;QACtC,OAAO,OAAO,CAAC,aAAa,GAAG,CAAC,OAAO,EAAE,OAAO;IAClD;IACA,OAAO;AACT,GACA,CAAC;IACC,OAAO,QAAQ,MAAM,CAAC;AACxB;AAGF,uBAAuB;AACvB,cAAc,YAAY,CAAC,QAAQ,CAAC,GAAG,CACrC,CAAC;IACC,OAAO;AACT,GACA,CAAC;IACC,IAAI,MAAM,QAAQ,EAAE,WAAW,KAAK;QAClC,oBAAoB;QACpB,SAAS,MAAM,GAAG;QAClB,sBAAsB;QACtB,OAAO,QAAQ,CAAC,IAAI,GAAG;IACzB;IACA,OAAO,QAAQ,MAAM,CAAC;AACxB;uCAGa","debugId":null}},
    {"offset": {"line": 208, "column": 0}, "map": {"version":3,"sources":["file:///run/media/saad/Local%20Disk/impSTUFF/edai/src/app/api/signup/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\"\nimport axiosInstance from \"@/lib/axios\"\n\nexport async function POST(request: Request) {\n  try {\n    const body = await request.json()\n    const { email, password, role, name } = body\n\n    // Call the backend API\n    const response = await axiosInstance.post(\"/auth/signup\", {\n      email,\n      password,\n      role,\n      name,\n    })\n\n    // Set the auth cookie\n    const headers = new Headers()\n    headers.append(\"Set-Cookie\", `auth=${response.data.token}; Path=/; HttpOnly; SameSite=Strict`)\n\n    return NextResponse.json(\n      { user: response.data.user },\n      { status: 201, headers }\n    )\n  } catch (error: any) {\n    return NextResponse.json(\n      { message: 'Failed to create account' },\n      { status: 500 }\n    );\n  }\n} "],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,eAAe,KAAK,OAAgB;IACzC,IAAI;QACF,MAAM,OAAO,MAAM,QAAQ,IAAI;QAC/B,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG;QAExC,uBAAuB;QACvB,MAAM,WAAW,MAAM,qHAAA,CAAA,UAAa,CAAC,IAAI,CAAC,gBAAgB;YACxD;YACA;YACA;YACA;QACF;QAEA,sBAAsB;QACtB,MAAM,UAAU,IAAI;QACpB,QAAQ,MAAM,CAAC,cAAc,CAAC,KAAK,EAAE,SAAS,IAAI,CAAC,KAAK,CAAC,mCAAmC,CAAC;QAE7F,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,MAAM,SAAS,IAAI,CAAC,IAAI;QAAC,GAC3B;YAAE,QAAQ;YAAK;QAAQ;IAE3B,EAAE,OAAO,OAAY;QACnB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,SAAS;QAA2B,GACtC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}