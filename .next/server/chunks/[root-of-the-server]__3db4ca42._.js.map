{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 100, "column": 0}, "map": {"version":3,"sources":["file:///run/media/saad/Local%20Disk/impSTUFF/edai/src/utils/db.js"],"sourcesContent":["import mongoose from 'mongoose';\n\nconst MONGODB_URI = process.env.MONGODB_URI;\n\nif (!MONGODB_URI) throw new Error('Missing MONGODB_URI in .env.local');\n\nlet cached = global.mongoose || { conn: null, promise: null };\n\nasync function connectDB() {\n  console.log(\"Connecting to MongoDB...\");\n  if (cached.conn) return cached.conn;\n\n  cached.promise = cached.promise || \n    mongoose.connect(MONGODB_URI).then(mongoose => mongoose);\n\n  cached.conn = await cached.promise;\n  return cached.conn;\n}\n\nexport default connectDB;"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,cAAc,QAAQ,GAAG,CAAC,WAAW;AAE3C,IAAI,CAAC,aAAa,MAAM,IAAI,MAAM;AAElC,IAAI,SAAS,OAAO,QAAQ,IAAI;IAAE,MAAM;IAAM,SAAS;AAAK;AAE5D,eAAe;IACb,QAAQ,GAAG,CAAC;IACZ,IAAI,OAAO,IAAI,EAAE,OAAO,OAAO,IAAI;IAEnC,OAAO,OAAO,GAAG,OAAO,OAAO,IAC7B,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,aAAa,IAAI,CAAC,CAAA,WAAY;IAEjD,OAAO,IAAI,GAAG,MAAM,OAAO,OAAO;IAClC,OAAO,OAAO,IAAI;AACpB;uCAEe","debugId":null}},
    {"offset": {"line": 125, "column": 0}, "map": {"version":3,"sources":["file:///run/media/saad/Local%20Disk/impSTUFF/edai/src/models/courseModel.js"],"sourcesContent":["import mongoose from 'mongoose';\n\nconst CourseSchema = new mongoose.Schema({\n  title: { type: String, required: true },\n  description: String,\n  thumbnailUrl: String,\n  tutor: { type: mongoose.Schema.Types.ObjectId, ref: 'User', required: true },\n  videos: [{ type: mongoose.Schema.Types.ObjectId, ref: 'Video' }],\n  enrolledStudents: [{ type: mongoose.Schema.Types.ObjectId, ref: 'User' }],\n \n}, {\n  timestamps: true\n});\n\nexport default mongoose.models.Course || mongoose.model('Course', CourseSchema);\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,eAAe,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC;IACvC,OAAO;QAAE,MAAM;QAAQ,UAAU;IAAK;IACtC,aAAa;IACb,cAAc;IACd,OAAO;QAAE,MAAM,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ;QAAE,KAAK;QAAQ,UAAU;IAAK;IAC3E,QAAQ;QAAC;YAAE,MAAM,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ;YAAE,KAAK;QAAQ;KAAE;IAChE,kBAAkB;QAAC;YAAE,MAAM,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ;YAAE,KAAK;QAAO;KAAE;AAE3E,GAAG;IACD,YAAY;AACd;uCAEe,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,MAAM,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,UAAU","debugId":null}},
    {"offset": {"line": 164, "column": 0}, "map": {"version":3,"sources":["file:///run/media/saad/Local%20Disk/impSTUFF/edai/src/app/api/course/create/route.js"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport jwt from 'jsonwebtoken';\nimport dbConnect from  \"@/utils/db.js\"\nimport Course from \"@/models/courseModel.js\"\nimport { parse } from 'cookie';\n\nexport async function POST(request) {\n  try {\n    // Parse cookies from request\n    const token = request.cookies.get('authToken')?.value;\n\n\n    if (!token) {\n      return NextResponse.json(\n        { message: 'No token provided, please login' },\n        { status: 401 }\n      );\n    }\n\n    // Verify JWT token\n    const decoded = jwt.verify(token, process.env.JWT_SECRET);\n\n    // Database connection\n    await dbConnect();\n\n    // Get request body data\n    const { title, description, thumbnailUrl } = await request.json();\n    \n    // Validate required fields\n    if (!title || !description) {\n      return NextResponse.json(\n        { message: 'Missing required fields' },\n        { status: 400 }\n      );\n    }\n\n    // Create and save new course\n    const newCourse = new Course({\n      title,\n      description,\n      thumbnailUrl,\n      tutor: decoded.userId,\n      videos: [],\n      enrolledStudents: []\n    });\n\n    const savedCourse = await newCourse.save();\n\n    // Return successful response\n    return NextResponse.json(\n      { \n        message: 'Course created successfully', \n        course: savedCourse \n      },\n      { status: 201 }\n    );\n\n  } catch (error) {\n    console.error('Course creation error:', error);\n    return NextResponse.json(\n      { \n        message: 'Error creating course', \n        error: error.message \n      },\n      { status: 500 }\n    );\n  }\n}"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;;;;;;AAEO,eAAe,KAAK,OAAO;IAChC,IAAI;QACF,6BAA6B;QAC7B,MAAM,QAAQ,QAAQ,OAAO,CAAC,GAAG,CAAC,cAAc;QAGhD,IAAI,CAAC,OAAO;YACV,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,SAAS;YAAkC,GAC7C;gBAAE,QAAQ;YAAI;QAElB;QAEA,mBAAmB;QACnB,MAAM,UAAU,uIAAA,CAAA,UAAG,CAAC,MAAM,CAAC,OAAO,QAAQ,GAAG,CAAC,UAAU;QAExD,sBAAsB;QACtB,MAAM,CAAA,GAAA,oHAAA,CAAA,UAAS,AAAD;QAEd,wBAAwB;QACxB,MAAM,EAAE,KAAK,EAAE,WAAW,EAAE,YAAY,EAAE,GAAG,MAAM,QAAQ,IAAI;QAE/D,2BAA2B;QAC3B,IAAI,CAAC,SAAS,CAAC,aAAa;YAC1B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,SAAS;YAA0B,GACrC;gBAAE,QAAQ;YAAI;QAElB;QAEA,6BAA6B;QAC7B,MAAM,YAAY,IAAI,8HAAA,CAAA,UAAM,CAAC;YAC3B;YACA;YACA;YACA,OAAO,QAAQ,MAAM;YACrB,QAAQ,EAAE;YACV,kBAAkB,EAAE;QACtB;QAEA,MAAM,cAAc,MAAM,UAAU,IAAI;QAExC,6BAA6B;QAC7B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YACE,SAAS;YACT,QAAQ;QACV,GACA;YAAE,QAAQ;QAAI;IAGlB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,0BAA0B;QACxC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YACE,SAAS;YACT,OAAO,MAAM,OAAO;QACtB,GACA;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}