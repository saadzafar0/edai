{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///run/media/saad/Local%20Disk/impSTUFF/edai/src/utils/db.js"],"sourcesContent":["import mongoose from 'mongoose';\n\nconst MONGODB_URI = process.env.MONGODB_URI;\n\nif (!MONGODB_URI) throw new Error('Missing MONGODB_URI in .env.local');\n\nlet cached = global.mongoose || { conn: null, promise: null };\n\nasync function connectDB() {\n  console.log(\"Connecting to MongoDB...\");\n  if (cached.conn) return cached.conn;\n\n  cached.promise = cached.promise || \n    mongoose.connect(MONGODB_URI).then(mongoose => mongoose);\n\n  cached.conn = await cached.promise;\n  return cached.conn;\n}\n\nexport default connectDB;"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,cAAc,QAAQ,GAAG,CAAC,WAAW;AAE3C,IAAI,CAAC,aAAa,MAAM,IAAI,MAAM;AAElC,IAAI,SAAS,OAAO,QAAQ,IAAI;IAAE,MAAM;IAAM,SAAS;AAAK;AAE5D,eAAe;IACb,QAAQ,GAAG,CAAC;IACZ,IAAI,OAAO,IAAI,EAAE,OAAO,OAAO,IAAI;IAEnC,OAAO,OAAO,GAAG,OAAO,OAAO,IAC7B,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,aAAa,IAAI,CAAC,CAAA,WAAY;IAEjD,OAAO,IAAI,GAAG,MAAM,OAAO,OAAO;IAClC,OAAO,OAAO,IAAI;AACpB;uCAEe","debugId":null}},
    {"offset": {"line": 93, "column": 0}, "map": {"version":3,"sources":["file:///run/media/saad/Local%20Disk/impSTUFF/edai/src/models/userModel.js"],"sourcesContent":["import mongoose from 'mongoose';\n\nconst UserSchema = new mongoose.Schema({\n  name: String,\n  email: { type: String, unique: true, required: true },\n  password: String,\n  createdAt: { type: Date, default: Date.now },\n  role: { type: String, enum: ['student', 'tutor'], default: 'student' },\n  coursesEnrolled: [{ type: mongoose.Schema.Types.ObjectId, ref: 'Enrollment' }],\n});\n\nexport default mongoose.models.User || mongoose.model('User', UserSchema);\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,aAAa,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC;IACrC,MAAM;IACN,OAAO;QAAE,MAAM;QAAQ,QAAQ;QAAM,UAAU;IAAK;IACpD,UAAU;IACV,WAAW;QAAE,MAAM;QAAM,SAAS,KAAK,GAAG;IAAC;IAC3C,MAAM;QAAE,MAAM;QAAQ,MAAM;YAAC;YAAW;SAAQ;QAAE,SAAS;IAAU;IACrE,iBAAiB;QAAC;YAAE,MAAM,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ;YAAE,KAAK;QAAa;KAAE;AAChF;uCAEe,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,QAAQ","debugId":null}},
    {"offset": {"line": 164, "column": 0}, "map": {"version":3,"sources":["file:///run/media/saad/Local%20Disk/impSTUFF/edai/src/app/api/signup/route.js"],"sourcesContent":["import { NextResponse } from 'next/server';\nimport dbConnect from '@/utils/db';\nimport User from '../../../models/userModel';\nimport bcrypt from 'bcryptjs';\nimport jwt from 'jsonwebtoken';\n\nexport async function POST(request) {\n  try {\n    await dbConnect();\n    console.log('Connected to database');\n\n    // Get request body\n    const { email, password, name, role } = await request.json();\n    console.log('Connected to database');\n\n    // Check if user exists\n    const existingUser = await User.findOne({ email });\n    if (existingUser) {\n      return NextResponse.json(\n        { message: 'User already exists' },\n        { status: 400 }\n      );\n    }\n    console.log('Connected to database');\n\n    // Hash password\n    const hashedPassword = await bcrypt.hash(password, 12);\n\n    // Create user\n    const user = await User.create({\n      email,\n      password: hashedPassword,\n      name,\n      role\n    });\n\n    // Create JWT token\n    const token = jwt.sign(\n      { userId: user._id, email: user.email, role: user.role },\n      process.env.JWT_SECRET,\n      { expiresIn: '1d' }\n    );\n\n    // Create response\n    const response = NextResponse.json(\n      {\n        user: user.toObject({ transform: (doc, ret) => {\n          delete ret.password;\n          return ret;\n        }}),\n        message: 'User created successfully'\n      },\n      { status: 201 }\n    );\n\n    // Set secure cookie\n    response.cookies.set({\n      name: 'authToken',\n      value: token,\n      httpOnly: true,\n      secure: process.env.NODE_ENV === 'production',\n      sameSite: 'strict',\n      maxAge: 86400, // 1 day\n      path: '/',\n    });\n\n    return response;\n\n  } catch (error) {\n    console.log('Error creating user:', error);\n    return NextResponse.json(\n      {\n        message: 'Something went wrong',\n        error: error.message\n      },\n      { status: 500 }\n    );\n  }\n}"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;;;;;;AAEO,eAAe,KAAK,OAAO;IAChC,IAAI;QACF,MAAM,CAAA,GAAA,oHAAA,CAAA,UAAS,AAAD;QACd,QAAQ,GAAG,CAAC;QAEZ,mBAAmB;QACnB,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,MAAM,QAAQ,IAAI;QAC1D,QAAQ,GAAG,CAAC;QAEZ,uBAAuB;QACvB,MAAM,eAAe,MAAM,4HAAA,CAAA,UAAI,CAAC,OAAO,CAAC;YAAE;QAAM;QAChD,IAAI,cAAc;YAChB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,SAAS;YAAsB,GACjC;gBAAE,QAAQ;YAAI;QAElB;QACA,QAAQ,GAAG,CAAC;QAEZ,gBAAgB;QAChB,MAAM,iBAAiB,MAAM,mIAAA,CAAA,UAAM,CAAC,IAAI,CAAC,UAAU;QAEnD,cAAc;QACd,MAAM,OAAO,MAAM,4HAAA,CAAA,UAAI,CAAC,MAAM,CAAC;YAC7B;YACA,UAAU;YACV;YACA;QACF;QAEA,mBAAmB;QACnB,MAAM,QAAQ,uIAAA,CAAA,UAAG,CAAC,IAAI,CACpB;YAAE,QAAQ,KAAK,GAAG;YAAE,OAAO,KAAK,KAAK;YAAE,MAAM,KAAK,IAAI;QAAC,GACvD,QAAQ,GAAG,CAAC,UAAU,EACtB;YAAE,WAAW;QAAK;QAGpB,kBAAkB;QAClB,MAAM,WAAW,gIAAA,CAAA,eAAY,CAAC,IAAI,CAChC;YACE,MAAM,KAAK,QAAQ,CAAC;gBAAE,WAAW,CAAC,KAAK;oBACrC,OAAO,IAAI,QAAQ;oBACnB,OAAO;gBACT;YAAC;YACD,SAAS;QACX,GACA;YAAE,QAAQ;QAAI;QAGhB,oBAAoB;QACpB,SAAS,OAAO,CAAC,GAAG,CAAC;YACnB,MAAM;YACN,OAAO;YACP,UAAU;YACV,QAAQ,oDAAyB;YACjC,UAAU;YACV,QAAQ;YACR,MAAM;QACR;QAEA,OAAO;IAET,EAAE,OAAO,OAAO;QACd,QAAQ,GAAG,CAAC,wBAAwB;QACpC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YACE,SAAS;YACT,OAAO,MAAM,OAAO;QACtB,GACA;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}